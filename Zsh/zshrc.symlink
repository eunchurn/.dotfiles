# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#!/bin/zsh

# Paths and Variables

## Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
export PATH=/usr/local/bin:$PATH
export PATH=/usr/local/sbin:$PATH

export dotfiles=$HOME/.dotfiles
export DOTFILES=$dotfiles
export ZSH_CUSTOM=$DOTFILES/Zsh/custom

export EDITOR="nvim"
export LESS="-R"
export zshrc="$HOME/.zshrc"

# Language fix
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Search Configs (fzf/rg)
export IGNORED_DIRS="{.git,.bzr,.svn,.hg,CVS,node_modules,dist,deps,_build,.backstop,.elixir_ls,.cache}"
export RG_DEFAULT_FLAGS=(--no-ignore-vcs --hidden --follow --max-columns 150)
export RG_DEFAULT_ARGS=($RG_DEFAULT_FLAGS --glob "!**/$IGNORED_DIRS/*")
export FZF_DEFAULT_COMMAND="rg --files $RG_DEFAULT_FLAGS --glob '!**/$IGNORED_DIRS/*'"

# Geometry Theme Settings
export GEOMETRY_SYMBOL_PROMPT="▲"
export GEOMETRY_SYMBOL_EXIT_VALUE="▲"
export GEOMETRY_COLOR_EXIT_VALUE="yellow"
export GEOMETRY_PROMPT_PREFIX=""
export PROMPT_GEOMETRY_EXEC_TIME=true
export PROMPT_GEOMETRY_COMMAND_MAX_EXEC_TIME=0

# Powerlevel10k Settings
export POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true

# Zsh Settings
plugins=(
  git
  brew
  zsh-syntax-highlighting
  zsh-autosuggestions
  # fzf
  fasd
  # zsh-hangul
  macos
  docker
  kubectl
  aliases
  1password
  sudo
  web-search
  dirhistory
  copybuffer
  history
  tig
  # iterm2
)
# ZSH_THEME="geometry/geometry"
ZSH_THEME="powerlevel10k/powerlevel10k"
COMPLETION_WAITING_DOTS="true"

### Fix slowness of pastes with zsh-syntax-highlighting.zsh
pasteinit() {
  OLD_SELF_INSERT=${${(s.:.)widgets[self-insert]}[2,3]}
  zle -N self-insert url-quote-magic # I wonder if you'd need `.url-quote-magic`?
}

pastefinish() {
  zle -N self-insert $OLD_SELF_INSERT
}
zstyle :bracketed-paste-magic paste-init pasteinit
zstyle :bracketed-paste-magic paste-finish pastefinish
### Fix slowness of pastes


# Zsh History
# (Save History to Dropbox if already set up)
export PSY_HISTORY_FILE="$HOME/Dropbox/System/.zsh_history"
[[ -f $PSY_HISTORY_FILE ]] && export HISTFILE=$PSY_HISTORY_FILE

export HISTSIZE=50000
export SAVEHIST=$HISTSIZE
setopt SHARE_HISTORY
setopt EXTENDED_HISTORY
setopt INC_APPEND_HISTORY

# Load Oh-My-Zsh
source $ZSH/oh-my-zsh.sh

# Load Homebrew
export BREW_COMMAND="/opt/homebrew/bin/brew"
[[ -s "$BREW_COMMAND" ]] && eval "$($BREW_COMMAND shellenv)"

# Enable Vim mode
#bindkey -v

# Load 'z'
#source `brew --prefix`/etc/profile.d/z.sh

# Go Configs
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin

# ASDF Configs
# export ASDF_DIR=/usr/local/opt/asdf/libexec   # (manual install)
export ASDF_DIR=/opt/homebrew/opt/asdf/libexec # (homebrew install)
[[ -s "$ASDF_DIR/asdf.sh" ]] && source "$ASDF_DIR/asdf.sh"
fpath=(${ASDF_DIR}/completions $fpath)
autoload -Uz compinit && compinit

# Enable `direnv` if available
if command -v direnv >/dev/null; then
  eval "$(direnv hook zsh)"
fi

# NVM Configs
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                   # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion

export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
export PUPPETEER_EXECUTABLE_PATH=`which chromium`

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
export PATH="/opt/homebrew/opt/ruby/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/ruby/lib"
export CPPFLAGS="-I/opt/homebrew/opt/ruby/include"

# RVM Configs
# export PATH=$PATH:$HOME/.rvm/bin
# [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# Load my .(z)sh files
typeset -U my_aliases
typeset -U my_functions
my_aliases=($DOTFILES/**/aliases.sh)
my_functions=($DOTFILES/**/functions.sh)
my_files=($my_aliases $my_functions)

for file in ${my_files}; do
  source $file
done

# Load .localrc for SUPER SECRET STUFF (at the end)
[[ -e ~/.localrc ]] && source ~/.localrc

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

alias k='kubectl'

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /opt/homebrew/bin/terraform terraform

# GPG
export GPG_TTY=$(tty)

# neofetch
# pnpm
export PNPM_HOME="/Users/eunchurnpark/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end

# chromium
export CHROME_EXECUTABLE=/opt/homebrew/bin/chromium
export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
export PUPPETEER_EXECUTABLE_PATH=`which chromium`

source "$HOME/.cargo/env"
export PATH="/Users/eunchurn/Library/Python/3.11/bin:$PATH"
export PATH="/opt/homebrew/lib/python3.11/site-packages:$PATH"
export CPATH=/opt/homebrew/include
export LIBRARY_PATH=/opt/homebrew/lib
# source "/Users/eunchurn/emsdk/emsdk_env.sh"
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
